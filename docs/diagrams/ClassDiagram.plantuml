@startuml


Match *-down-> "3|5" Set
Match o-down-> Referee
Match *-down-> ScoreBoard

Set *-down-> "6..13" IGame

StandardGame o-down-> "2" Player
TieBreakGame o-down-> "2" Player

ScoreBoard -down-> "2" Player

class Match {
- String id
- Date date
- List<Set> sets
- int totalSets
- Set currentSet
- ScoreBoard scoreBoard

+ isMatchOver(): boolean
}

class Player {
- int id
- String name

}

class Referee {
- int id
- String name
- String password

+ authenticate(String password): boolean
}

class Set {
    - IGame currentGame
    - List<IGame> games
    - GameFactory gameFactory

    + addGame(Game game)
    + updateGame(Player playerService, Player playerRest)
    + isTieBreak(): boolean
    }

interface IGame {
List<Player> getPlayers();
boolean isPlayer0Service();
void switchRoles();
void updatePoints(Player player);
boolean isGameOver();
}

class StandardGame implements IGame{
- List<Player> players
- boolean isPlayer0Service

+ isPlayer0Service(): boolean
+ switchRoles()
+ updatePoints(Player player)
+ isGameOver(): boolean
}

class TieBreakGame implements IGame{
- List<Player> players
- boolean isPlayer0Service

+ isPlayer0Service(): boolean
+ switchRoles()
+ updatePoints(Player player)
+ isGameOver(): boolean
}

class ScoreBoard {
- int[] currentPoints;
- int[][] currentGames;
- int[] currentSets;
- int lackServiceCount;
- int totalSets;
- List<Player> players;

+ incrementServiceFault()
+ getServiceFaultCount(): int
+ resetServiceFaultCount()
+ updatePoints(Player player)
+ updateGames(Player player)
+ updateSets(Player player)
+ resetPoints()
+ resetGames()
+ isGameOver(): boolean
+ isSetOver(): boolean
- getCurrentSetIndex(): int
}

@enduml