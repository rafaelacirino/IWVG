@startuml
package "model" {

    class Match {
    - String id
    - Date date
    - List<Set> sets
    - int totalSets
    - Set currentSet
    - ScoreBoard scoreBoard

    }

    class Referee {
    - int id
    - String name
    - String password

    + authenticate(String password): boolean
    }

    class Player {
    - int id
    - String name
    }

    class Set {
    - Game currentGame
    - List<Game> games

    + addGame(Game game)
    }

    class Game {
    - List<Player> players
    - boolean isPlayer0Service

    + isPlayer0Service(): boolean
    + switchRoles()
    }

    class TieBreakGame {
    }

    class ScoreBoard {
    - int[] currentPoints;
    - int[][] currentGames;
    - int[] currentSets;
    - int lackServiceCount;
    - int totalSets;
    - List<Player> players;

    + incrementServiceFault()
    + getServiceFaultCount(): int
    + resetServiceFaultCount()
    + updatePoints(Player player)
    + updateGames(Player player)
    + updateSets(Player player)
    + resetPoints()
    + resetGames()
    + isGameOver(): boolean
    + isSetOver(): boolean
    + getCurrentSetIndex(): int
    }
}

package "view" {
    class MatchView {

    + displayInitialMatch()
    + displayMatchScore()
    + displayMatchResult()
    + displayPlayerCreated(Player player)
    + displayRefereeCreated(Referee referee)
    + displayLoginStatus(boolean success)
    + displayPointToServer(Player playerService)
    + displayPointToReceiver(Player playerRest)
    + displayLackService(Player playerService)
    + displayGameOver()
    + displaySetOver()
    + displayMatchOver()
    }
}

package "controller" {
    class MatchController {
    - MatchView matchView
    - Match match

    + createMatch(int totalSets, Player playerService, Player playerRest)
    }

    class PlayerController {
    - List<Player> players

    + createPlayer(String name): Player
    + getPlayerById(int id): Player
    + getPlayers(): List<Player>
    }

    class RefereeController {
    - ArrayList<Referee> referees

    + createReferee(String name, String password): Referee
    + login(String name, String password): boolean
    - isDuplicate(String name, String password)
    }

    class ScoreController {
    - ScoreBoard scoreBoard
    - Game game

    + checkGameEndAndSwitchRoles()
    - scorePoint(boolean isPlayer0Service)
    + pointService()
    + pointRest()
    + lackService()
    + isGameOver(): boolean
    + isSetOver(): boolean

    }
}

"controller" ..> "model" : request/update
"controller" ..> "view" : send
"view" ..> "controller" : display
"model" ..> "controller" : send


@enduml